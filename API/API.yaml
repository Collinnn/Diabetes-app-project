swagger: "2.0"
info:
  title: DiAPIbetes
  description: API for the DiAPPbetes application
  version: 1..100:5050
host: localhost:8080
basePath: /api/v1/
schemes:
  - http
  
paths:
  /doctors:
    get:
      summary: Gets a list of doctors
      responses:
        "200":
          description: The list of doctors
          schema:
            type: array
            items:
              $ref: "#/definitions/Doctor"
              
    post:
      summary: Adds a doctor to the database
      parameters:
        - in: body
          name: doctor
          required: true
          schema:
            $ref: "#/definitions/Doctor"
      responses:
        "200":
          description: Doctor correctly added
          schema:
            $ref: "#/definitions/Doctor"
          
          
  /doctors/{doctorId}:          
    get:
      summary: Gets doctor with specified id
      parameters:
        - in: path
          name: doctorId
          type: integer
          description: The id of the doctor
          required: true
      responses:
        "200":
          description: The doctor with the specified id
          schema:
            $ref: "#/definitions/Doctor"
        "404":
          description: The doctor cannot be found

    put:
      summary: Change doctor properties
      parameters:
        - in: path
          name: doctorId
          type: integer
          description: The id of the doctor
          required: true
        - in: body
          name: doctor
          required: true
          schema:
            $ref: "#/definitions/Doctor"
      responses:
        "200":
          description: The doctor has been updated successfully
          schema:
            $ref: "#/definitions/Doctor"
      
    delete:
      summary: Deletes a doctor
      parameters:
        - in: path
          name: doctorId
          type: integer
          description: The id of the doctor to delete
          required: true
      responses:
        "204":
          description: The doctor has been deleted

  
  /doctors/{doctorId}/patients:
    get:
      summary: Gets a list of patients associated with a doctor
      parameters:
        - in: path
          name: doctorId
          type: integer
          description: The id of the doctor
          required: true
      responses:
        "200":
          description: The list of patients associated with the doctor
          schema:
            type: array
            items:
              $ref: "#/definitions/Patient"
        "404":
          description: The doctor cannot be found

  
  /patients:
    get:
      summary: Gets the list of patients
      responses:
        "200":
          description: The list of all patients
          schema:
            type: array
            items:
              $ref: "#/definitions/Patient"
          
    post:
      summary: Adds a patient to the database
      parameters:
        - in: body
          name: patient
          required: true
          schema:
            $ref: "#/definitions/Patient"
      responses:
        "200":
          description: Patient correctly added
          schema:
            $ref: "#/definitions/Patient"
          
          
  /patients/{patientId}:   
    get:
      summary: Gets a patient
      parameters:
        - in: path
          name: patientId
          type: integer
          description: The id of the patient
          required: true
      responses:
        "200":
          description: The patient with the specified id
          schema:
            $ref: "#/definitions/Patient"
        "404":
          description: The patient cannot be found
    
    put:
      summary: Change patient properties
      parameters:
        - in: path
          name: patientId
          type: integer
          description: The id of the patient
          required: true
        - in: body
          name: patient
          required: true
          schema:
            $ref: "#/definitions/Patient"
      responses:
        "200":
          description: The patient has been updated successfully
          schema:
            $ref: "#/definitions/Patient"
    
    delete:
      summary: Deletes a patient
      parameters:
        - in: path
          name: patientId
          type: integer
          description: The id of the patient to delete
          required: true
      responses:
        "204":
          description: The patient has been deleted
          
          
  /patients/{patientId}/measurements:
    get:
      summary: Gets a list of measurements
      parameters:
        - in: path
          name: patientId
          type: integer
          description: The id of the patient
          required: true
      responses:
        "200":
          description: The patient's measurements list
          schema:
            type: array
            items:
              $ref: "#/definitions/Measurement"
        "404":
          description: The patient cannot be found
          
    post:
      summary: Adds a measurement to the database
      parameters:
        - in: path
          name: patientId
          type: integer
          description: The id of the patient
          required: true
        - in: body
          name: measurement
          required: true
          schema:
            $ref: "#/definitions/Measurement"
      responses:
        "200":
          description: Measurement correctly added
          schema:
            $ref: "#/definitions/Measurement"
        "404":
          description: The patient cannot be found
          
          
definitions:
  Patient:
    type: object
    properties:
      id:
        type: integer
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      dateOfBirth:
        type: string
      doctor:
        $ref: "#/definitions/Doctor"
        
  Doctor:
    type: object
    properties:
      id:
        type: integer
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      patients:
        type: array
        items:
          $ref: "#/definitions/Patient"
          
  Measurement:
    type: object
    properties:
      measurementId:
        $ref: "#/definitions/MeasurementId"
      glucoseLevel:
        type: number
      bolus:
        type: number
      basal:
        type: number
      carbohydrates:
        type: number
        
  MeasurementId:
    type: object
    properties:
      timestamp:
        type: string
        format: date-time
      patientId:
        type: integer